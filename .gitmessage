####################################
[Title]
Fix: 

[Description] #   In under 50 characters, description of the commit

[Footer]


####################################
# Use the prefix naming convention 
####################################
# Fix  : patches a bug in the codebase
# Feat : introduces a new feature is introduced with the changes
# Refactor: refactored code that neither fixes a bug nor adds a feature 
# Docs :  updates to documentation such as a the README or other markdown files
# Build: changes that affect the build system or external dependencies 
# Style: changes that do not affect the meaning of the code, likely related to code formatting such as white-space, missing semi-colons, and so on.
# Perf : improves code performance
# CI   : continuous integration related
# Test : including new or correcting previous tests 
# Revert â€“ reverts a previous commit 
###########################################
# Commits should follow the format below: 
###########################################
# [Title]
# <type>: In under 50 characters, description of the commit
# [Body]
# Explain in detail what was done in this commit and 
# what this is supposed to achieve. Keep this section
# under 72 characters per line. 
# [Footer]
# Use this section to add any PR/Ticket numbers that this
# commit is solving or any co-authors. If none of these apply, # leave it empty.